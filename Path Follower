using UnityEngine;

public class CarController : MonoBehaviour
{
    public Transform[] waypoints;
    public float speed = 150f;
    public float rotationSpeed = 2f;
    

    private int currentWaypoint = 0;

    void Update()
    {
        if (currentWaypoint < waypoints.Length)
        {
            MoveTowardsWaypoint();
        }
        else
        {
            // If all waypoints are visited, reset to the first waypoint
            currentWaypoint = 0;
        }

        // Check if the car has gone far from waypoints, then navigate back
     
    }

    void MoveTowardsWaypoint()
    {
        // Move towards the current waypoint
        transform.position = Vector3.MoveTowards(transform.position, waypoints[currentWaypoint].position, speed * Time.deltaTime);

        // Rotate towards the current waypoint
        Vector3 direction = waypoints[currentWaypoint].position - transform.position;
        Quaternion toRotation = Quaternion.LookRotation(-direction, Vector3.up);
        transform.rotation = Quaternion.Lerp(transform.rotation, toRotation, rotationSpeed * Time.deltaTime);

        // Check if the object has reached the current waypoint
        if (Vector3.Distance(transform.position, waypoints[currentWaypoint].position) < 0.1f)
        {
            currentWaypoint++;
        }
    }

    void FindNearestWaypoint()
    {
        // Find the nearest waypoint and set it as the current target
        float minDistance = float.MaxValue;
        int nearestWaypointIndex = 0;

        for (int i = 0; i < waypoints.Length; i++)
        {
            float distance = Vector3.Distance(transform.position, waypoints[i].position);
            if (distance < minDistance)
            {
                minDistance = distance;
                nearestWaypointIndex = i;
            }
        }

        currentWaypoint = nearestWaypointIndex;
    }
}
